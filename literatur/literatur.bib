
@book{coles_pro_2009,
	address = {Berkeley, CA},
	series = {The expert's voice in {SQL} server},
	title = {Pro full-text search in {SQL} {Server} 2008},
	isbn = {978-1-4302-1594-3},
	publisher = {Apress},
	author = {Coles, Michael and Cotter, Hilary},
	year = {2009},
	keywords = {Database management, Keyword searching, SQL (Computer program language), SQL server},
}

@book{nystrom_crafting_2021,
	address = {Daryaganj Delhi},
	title = {Crafting interpreters},
	isbn = {978-0-9905829-3-9},
	language = {eng},
	publisher = {Genever Benning},
	author = {Nystrom, Robert},
	year = {2021},
}

@book{aho_alfred_v_compilers_2002,
	address = {Beijing},
	title = {Compilers: {Principles}, {Techniques}, and {Tools}},
	isbn = {978-7-115-09916-7},
	shorttitle = {Bian yi yuan li ji shu yu gong ju = {Compilers}},
	abstract = {Ben shu shi guan yu bian yi qi she ji de jiao cheng, Quan shu gong 12 zhang, Zhong dian jie shao le zai jie jue she ji yu yan fan yi qi guo cheng zhong suo pu bian mian dui de yi xie wen ti.},
	language = {Chinese},
	publisher = {Ren min you dian chu ban she},
	author = {{Aho, Alfred V.} and {Sethi, Ravi} and {Ullman, Jeffrey D.}},
	year = {2002},
	note = {OCLC: 952713825},
}

@book{berry_understanding_1999,
	address = {Philadelphia, PA},
	series = {Software, environments, tools},
	title = {Understanding search engines: mathematical modeling and text retrieval},
	isbn = {978-0-89871-437-1},
	shorttitle = {Understanding search engines},
	publisher = {Society for Industrial and Applied Mathematics},
	author = {Berry, Michael W. and Browne, Murray},
	year = {1999},
	keywords = {Text processing (Computer science), Vector spaces, Web search engines},
}

@inproceedings{bast_index_2013,
	address = {New York, NY, USA},
	series = {{CIKM} '13},
	title = {An {Index} for {Efficient} {Semantic} {Full}-{Text} {Search}},
	isbn = {978-1-4503-2263-8},
	url = {https://doi.org/10.1145/2505515.2505689},
	doi = {10.1145/2505515.2505689},
	abstract = {In this paper we present a novel index data structure tailored towards semantic full-text search. Semantic full-text search, as we call it, deeply integrates keyword-based full-text search with structured search in ontologies. Queries are SPARQL-like, with additional relations for specifying word-entity co-occurrences. In order to build such queries the user needs to be guided. We believe that incremental query construction with context-sensitive suggestions in every step serves that purpose well. Our index has to answer queries and provide such suggestions in real time. We achieve this through a novel kind of posting lists and query processing, avoiding very long (intermediate) result lists and expensive (non-local) operations on these lists. In an evaluation of 8000 queries on the full English Wikipedia (40 GB XML dump) and the YAGO ontology (26.6 million facts), we achieve average query and suggestion times of around 150ms.},
	booktitle = {Proceedings of the 22nd {ACM} {International} {Conference} on {Information} \&amp; {Knowledge} {Management}},
	publisher = {Association for Computing Machinery},
	author = {Bast, Hannah and Buchhold, Björn},
	year = {2013},
	note = {event-place: San Francisco, California, USA},
	keywords = {indexing, query processing, semantic full-text search},
	pages = {369--378},
}

@misc{bast_broccoli_2013,
	title = {Broccoli: {Semantic} {Full}-{Text} {Search} at your {Fingertips}},
	shorttitle = {Broccoli},
	url = {http://arxiv.org/abs/1207.2615},
	abstract = {We present Broccoli, a fast and easy-to-use search engine for what we call semantic full-text search. Semantic full-text search combines the capabilities of standard full-text search and ontology search. The search operates on four kinds of objects: ordinary words (e.g., edible), classes (e.g., plants), instances (e.g., Broccoli), and relations (e.g., occurs-with or native-to). Queries are trees, where nodes are arbitrary bags of these objects, and arcs are relations. The user interface guides the user in incrementally constructing such trees by instant (search-as-you-type) suggestions of words, classes, instances, or relations that lead to good hits. Both standard full-text search and pure ontology search are included as special cases. In this paper, we describe the query language of Broccoli, the main idea behind a new kind of index that enables fast processing of queries from that language as well as fast query suggestion, the natural language processing required, and the user interface. We evaluated query times and result quality on the full version of the English Wikipedia (40 GB XML dump) combined with the YAGO ontology (26 million facts). We have implemented a fully functional prototype based on our ideas and provide a web application to reproduce our quality experiments. Both are accessible via http://broccoli.informatik.uni-freiburg.de/repro-corr/ .},
	urldate = {2022-07-28},
	publisher = {arXiv},
	author = {Bast, Hannah and Bäurle, Florian and Buchhold, Björn and Haussmann, Elmar},
	month = jul,
	year = {2013},
	note = {arXiv:1207.2615 [cs]},
	keywords = {Computer Science - Information Retrieval, H.3.1, H.3.3, H.5.2},
}

@inproceedings{bast_ester_2007,
	address = {New York, NY, USA},
	series = {{SIGIR} '07},
	title = {{ESTER}: {Efficient} {Search} on {Text}, {Entities}, and {Relations}},
	isbn = {978-1-59593-597-7},
	url = {https://doi.org/10.1145/1277741.1277856},
	doi = {10.1145/1277741.1277856},
	abstract = {We present ESTER, a modular and highly efficient system for combined full-text and ontology search. ESTER builds on a query engine that supports two basic operations: prefix search and join. Both of these can be implemented very efficiently with a compact index, yet in combination provide powerful querying capabilities. We show how ESTER can answer basic SPARQL graph-pattern queries on the ontology by reducing them to a small number of these two basic operations. ESTER further supports a natural blend of such semantic queries with ordinary full-text queries. Moreover, the prefix search operation allows for a fully interactive and proactive user interface, which after every keystroke suggests to the user possible semantic interpretations of his or her query, and speculatively executes the most likely of these interpretations. As a proof of concept, we applied ESTER to the English Wikipedia, which contains about 3 million documents, combined with the recent YAGO ontology, which contains about 2.5 million facts. For a variety of complex queries, ESTER achieves worst-case query processing times of a fraction of a second, on a single machine, with an index size of about 4 GB.},
	booktitle = {Proceedings of the 30th {Annual} {International} {ACM} {SIGIR} {Conference} on {Research} and {Development} in {Information} {Retrieval}},
	publisher = {Association for Computing Machinery},
	author = {Bast, Holger and Chitea, Alexandru and Suchanek, Fabian and Weber, Ingmar},
	year = {2007},
	note = {event-place: Amsterdam, The Netherlands},
	keywords = {interactive, ontologies, proactive, semantic search, Wikipedia},
	pages = {671--678},
}

@inproceedings{arefin_natural_2021,
	address = {Dhaka, Bangladesh},
	title = {Natural {Language} {Query} to {SQL} {Conversion} {Using} {Machine} {Learning} {Approach}},
	isbn = {978-1-66540-007-7 978-1-66540-009-1},
	url = {https://ieeexplore.ieee.org/document/9732586/},
	doi = {10.1109/STI53101.2021.9732586},
	urldate = {2022-08-04},
	booktitle = {2021 3rd {International} {Conference} on {Sustainable} {Technologies} for {Industry} 4.0 ({STI})},
	publisher = {IEEE},
	author = {Arefin, Minhazul and Hossen, Kazi Mojammel and Uddin, Mohammed Nasir},
	month = dec,
	year = {2021},
	pages = {1--6},
}

@incollection{hutchison_query_2006,
	address = {Berlin, Heidelberg},
	title = {Query {Generation} {Using} {Semantic} {Features}},
	volume = {4312},
	isbn = {978-3-540-49375-4 978-3-540-49377-8},
	url = {http://link.springer.com/10.1007/11931584_26},
	urldate = {2022-08-05},
	booktitle = {Digital {Libraries}: {Achievements}, {Challenges} and {Opportunities}},
	publisher = {Springer Berlin Heidelberg},
	author = {Shin, Seung-Eun and Seo, Young-Hoon},
	editor = {Hutchison, David and Kanade, Takeo and Kittler, Josef and Kleinberg, Jon M. and Mattern, Friedemann and Mitchell, John C. and Naor, Moni and Nierstrasz, Oscar and Pandu Rangan, C. and Steffen, Bernhard and Sudan, Madhu and Terzopoulos, Demetri and Tygar, Dough and Vardi, Moshe Y. and Weikum, Gerhard and Sugimoto, Shigeo and Hunter, Jane and Rauber, Andreas and Morishima, Atsuyuki},
	year = {2006},
	doi = {10.1007/11931584_26},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {234--243},
}

@inproceedings{mahmud_rule_2015,
	address = {Khulna, Bangladesh},
	title = {A rule based approach for {NLP} based query processing},
	isbn = {978-1-4673-9256-3 978-1-4673-9257-0},
	url = {http://ieeexplore.ieee.org/document/7391926/},
	doi = {10.1109/EICT.2015.7391926},
	urldate = {2022-08-05},
	booktitle = {2015 2nd {International} {Conference} on {Electrical} {Information} and {Communication} {Technologies} ({EICT})},
	publisher = {IEEE},
	author = {Mahmud, Tanzim and Azharul Hasan, K. M. and Ahmed, Mahtab and {Thwoi Hla Ching Chak}},
	month = dec,
	year = {2015},
	pages = {78--82},
}

@incollection{harth_yago_2020,
	address = {Cham},
	title = {{YAGO} 4: {A} {Reason}-able {Knowledge} {Base}},
	volume = {12123},
	isbn = {978-3-030-49460-5 978-3-030-49461-2},
	shorttitle = {{YAGO} 4},
	url = {http://link.springer.com/10.1007/978-3-030-49461-2_34},
	language = {en},
	urldate = {2022-08-07},
	booktitle = {The {Semantic} {Web}},
	publisher = {Springer International Publishing},
	author = {Pellissier Tanon, Thomas and Weikum, Gerhard and Suchanek, Fabian},
	editor = {Harth, Andreas and Kirrane, Sabrina and Ngonga Ngomo, Axel-Cyrille and Paulheim, Heiko and Rula, Anisa and Gentile, Anna Lisa and Haase, Peter and Cochez, Michael},
	year = {2020},
	doi = {10.1007/978-3-030-49461-2_34},
	note = {Series Title: Lecture Notes in Computer Science},
	pages = {583--596},
}

@article{hamilton_microsoft_2001,
	title = {Microsoft {SQL} server full-text search},
	volume = {24},
	number = {4},
	journal = {IEEE Data Eng. Bull.},
	author = {Hamilton, James R. and Nayak, Tapas K.},
	year = {2001},
	note = {Publisher: Citeseer},
	pages = {7--10},
}

@article{mernik_when_2005,
	title = {When and how to develop domain-specific languages},
	volume = {37},
	issn = {0360-0300, 1557-7341},
	url = {https://dl.acm.org/doi/10.1145/1118890.1118892},
	doi = {10.1145/1118890.1118892},
	abstract = {Domain-specific languages (DSLs) are languages tailored to a specific application domain. They offer substantial gains in expressiveness and ease of use compared with general-purpose programming languages in their domain of application. DSL development is hard, requiring both domain knowledge and language development expertise. Few people have both. Not surprisingly, the decision to develop a DSL is often postponed indefinitely, if considered at all, and most DSLs never get beyond the application library stage.Although many articles have been written on the development of particular DSLs, there is very limited literature on DSL development methodologies and many questions remain regarding when and how to develop a DSL. To aid the DSL developer, we identify patterns in the decision, analysis, design, and implementation phases of DSL development. Our patterns improve and extend earlier work on DSL design patterns. We also discuss domain analysis tools and language development systems that may help to speed up DSL development. Finally, we present a number of open problems.},
	language = {en},
	number = {4},
	urldate = {2022-08-15},
	journal = {ACM Computing Surveys},
	author = {Mernik, Marjan and Heering, Jan and Sloane, Anthony M.},
	month = dec,
	year = {2005},
	pages = {316--344},
}

@article{hudak_domain-specific_1997,
	title = {Domain-specific languages},
	volume = {3},
	number = {39-60},
	journal = {Handbook of programming languages},
	author = {Hudak, Paul},
	year = {1997},
	pages = {21},
}

@incollection{wexelblat_origins_1978,
	address = {New York, NY, USA},
	title = {Origins of the {APT} language for automatically programmed tools},
	isbn = {978-0-12-745040-7},
	url = {http://dl.acm.org/doi/10.1145/800025.1198374},
	language = {en},
	urldate = {2022-08-15},
	booktitle = {History of programming languages},
	publisher = {ACM},
	author = {Ross, Douglas T.},
	editor = {Wexelblat, Richard L.},
	month = jun,
	year = {1978},
	doi = {10.1145/800025.1198374},
	pages = {279--338},
}

@article{backus_report_1960,
	title = {Report on the algorithmic language {ALGOL} 60},
	volume = {3},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/367236.367262},
	doi = {10.1145/367236.367262},
	language = {en},
	number = {5},
	urldate = {2022-08-16},
	journal = {Communications of the ACM},
	author = {Backus, J. W. and Bauer, F. L. and Green, J. and Katz, C. and McCarthy, J. and Perlis, A. J. and Rutishauser, H. and Samelson, K. and Vauquois, B. and Wegstein, J. H. and van Wijngaarden, A. and Woodger, M.},
	editor = {Naur, Peter},
	month = may,
	year = {1960},
	pages = {299--314},
}

@article{isoiec_149771996e_information_1996,
	title = {Information {Technology} - {Syntactic} {Metalanguage} - {Extended} {BNF}},
	url = {https://www.cl.cam.ac.uk/~mgk25/iso-14977.pdf},
	urldate = {2022-08-16},
	author = {{ISO/IEC 14977:1996(E)}},
	year = {1996},
}

@article{wirth_what_1977,
	title = {What can we do about the unnecessary diversity of notation for syntactic definitions?},
	volume = {20},
	issn = {0001-0782, 1557-7317},
	url = {https://dl.acm.org/doi/10.1145/359863.359883},
	doi = {10.1145/359863.359883},
	abstract = {The population of programming languages is steadily growing, and there is no end of this growth in sight. Many language definitions appear in journals, many are found in technical reports, and perhaps an even greater number remains confined to proprietory circles. After frequent exposure to these definitions, one cannot fail to notice the lack of “common denominators.” The only widely accepted fact is that the language structure is defined by a syntax. But even notation for syntactic description eludes any commonly agreed standard form, although the underlying ancestor is invariably the Backus-Naur Form of the Algol 60 report. As variations are often only slight, they become annoying for their very lack of an apparent motivation.},
	language = {en},
	number = {11},
	urldate = {2022-08-16},
	journal = {Communications of the ACM},
	author = {Wirth, Niklaus},
	month = nov,
	year = {1977},
	pages = {822--823},
}

@article{farrell_compiler_1995,
	title = {Compiler {Basics}},
	url = {http://www.cs.man.ac.uk/~pjj/farrell/compmain.html},
	language = {en},
	urldate = {2022-08-16},
	author = {Farrell, James Alan},
	month = aug,
	year = {1995},
	pages = {7},
}
